package kr.or.ddit.professor.lecture.service.impl;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import kr.or.ddit.professor.lecture.mapper.LectureMapper;
import kr.or.ddit.professor.lecture.service.LectureService;
import kr.or.ddit.professor.lecture.vo.LectureOpenVO;
import kr.or.ddit.professor.lecture.vo.LectureRoomVO;
import kr.or.ddit.professor.lecture.vo.SubjectVO;
import kr.or.ddit.professor.lecture.vo.SyllabusVO;

@Service
public class LectureServiceImpl implements LectureService{

	@Autowired
	LectureMapper lectureMapper;
	
	@Override
	public List<LectureOpenVO> selectLectureList(Map<String, Object> map){
		
		return this.lectureMapper.selectLectureList(map);
	}
	
	@Override
	public int selectCount(Map<String, Object> map) {
		return this.lectureMapper.selectCount(map);
	}
	
	@Override
	public List<LectureRoomVO> searchLectRoom(LectureRoomVO lectureRoomVO){
		return this.lectureMapper.searchLectRoom(lectureRoomVO);
	}
	
	@Override
	public LectureOpenVO detailLectureOpen(String lectOpenNum) {
		return this.lectureMapper.detailLectureOpen(lectOpenNum);
	}
	
	//학과 번호로 해당 학과에 해당하는 강의명 출력
	@Override
	public List<SubjectVO> searchLectName(SubjectVO subjectVO) {
		return this.lectureMapper.searchLectName(subjectVO);
	}
	
	@Override
	public LectureOpenVO searchDeptName(String memId) {
		return this.lectureMapper.searchDeptName(memId);
	}
	
	@Override
	public int updateLecture(LectureOpenVO lectureOpenVO) {
		return this.lectureMapper.updateLecture(lectureOpenVO);
	}
	
	@Override
	public int deleteLectureOpen(String lectOpenNum) {
		return this.lectureMapper.deleteLectureOpen(lectOpenNum);
	}
	
	@Override
	public SyllabusVO detailSyllabus(String lectOpenNum) {
		return this.lectureMapper.detailSyllabus(lectOpenNum);
	}
	
	//강의 계획서 수정 및 입력
	@Override
	public int updateSyllabus(SyllabusVO syllabusVO) {
		return this.lectureMapper.updateSyllabus(syllabusVO);
	}
	
	
	
	@Override
	public int searchLectCount(SubjectVO subjectVO) {
		return this.lectureMapper.searchLectCount(subjectVO);
	}
}
