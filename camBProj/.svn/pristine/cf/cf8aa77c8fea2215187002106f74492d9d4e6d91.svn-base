package kr.or.ddit.common.myPage.controller;

import java.io.UnsupportedEncodingException;
import java.security.NoSuchAlgorithmException;

import javax.servlet.http.HttpSession;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.common.login.vo.MemberVO;
import kr.or.ddit.common.myPage.service.MyPageService;
import kr.or.ddit.util.CryptoUtil.CryptoUtil;
import lombok.extern.slf4j.Slf4j;

@Slf4j

@Controller
public class MyPageController {

	private Logger logger = LoggerFactory.getLogger(this.getClass());

	@Autowired /* (required = true) */
	MyPageService myPageService;

	@RequestMapping(value = "/common/myPage/myPageList", method = RequestMethod.GET)
	public String myPageList(Model model, HttpSession session) {

//		session = request.getSession();
//		memberVo = (MemberVO) session.getAttribute("memberVo");
		MemberVO memberVo = (MemberVO) session.getAttribute("memberVo");
		logger.info(memberVo.toString());
		String id = memberVo.getMemId();

		MemberVO list = this.myPageService.myPageList(id);

		logger.info("list >>> " + list);

		model.addAttribute("list", list);

		return "common/myPage/myPageList";
	}
	@RequestMapping(value = "/common/myPage/myPageList", method = RequestMethod.POST)
	public String MyPagePwUpdatePost(@ModelAttribute MemberVO memberVo) throws Exception{
		
		String InputId = memberVo.getMemId();
		logger.info("입력받은 아이디 >> : " + InputId);
		String InputPass = memberVo.getPwd();
		logger.info("입력받은 비번 >> : " + InputPass);
		
		String InputPassCrypto = CryptoUtil.sha512(InputPass);
		memberVo.setPwd(InputPassCrypto);

		int result2 = this.myPageService.myPagePwUpdate(memberVo);
		
		return "redirect:/common/myPage/myPageList";
	}

	// 수정
	@RequestMapping(value = "/common/myPage/myPageUpdate", method = { RequestMethod.GET })
	public String myPageUpdate(@RequestParam String memId, Model model) {

		MemberVO mv = this.myPageService.myPageList(memId);
		model.addAttribute("mv", mv);
		logger.info("sdnlkfdsnkl" + mv);
		return "common/myPage/myPageUpdate";
	}

	// 수정 기능
	@RequestMapping(value = "/common/myPage/myPageUpdate", method = { RequestMethod.POST })
	public String myPageUpdatePost(@ModelAttribute MemberVO memberVo) {

		int result = this.myPageService.myPageUpdate(memberVo);

		return "redirect:/common/myPage/myPageList";
	}


}
