package kr.or.ddit.student.registrationLecture.service.impl;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import egovframework.rte.ptl.mvc.tags.ui.pagination.PaginationInfo;
import kr.or.ddit.student.registrationLecture.mapper.RegistrationLectureMapper;
import kr.or.ddit.student.registrationLecture.service.RegistrationLectureService;
import kr.or.ddit.student.registrationLecture.vo.RegistrationLectureVO;

// 강의 작업 마무리되면 시작하기

@Service
public class RegistrationLectureServiceImpl implements RegistrationLectureService {
	
	@Autowired
	RegistrationLectureMapper registrationLectureMapper;
	
	/**
	 * 이번 학기 수강신청 가능한 강의 목록 
	 */
	
	
	/**
	 * 학생이 이번 학기 수강 신청한 목록
	 * @param registrationLectureVo
	 */
	public List<RegistrationLectureVO> registrationLectureApplySelect(RegistrationLectureVO registrationLectureVo
															   , PaginationInfo paginationInfo) {
		
		// 페이징 처리
		registrationLectureVo.setFirstIndex(paginationInfo.getFirstRecordIndex()+1); 
		registrationLectureVo.setLastIndex(paginationInfo.getLastRecordIndex());	
		
		// 리스트 가져오기 std_id, year, semCode
		List<RegistrationLectureVO> registrationLectureSelect = registrationLectureMapper.registrationLectureApplySelect(registrationLectureVo);
		return registrationLectureSelect;
	}
	
	/**
	 * 페이징 처리 객체
	 */
	public PaginationInfo getPaginationInfo(RegistrationLectureVO registrationLectureVo) {
		PaginationInfo paginationInfo = new PaginationInfo();
		paginationInfo.setCurrentPageNo(registrationLectureVo.getPageNo());
		paginationInfo.setRecordCountPerPage(10);
		paginationInfo.setPageSize(5);
		paginationInfo.setTotalRecordCount(registrationLectureMapper.registrationLectureCount(registrationLectureVo));
		return paginationInfo;
	}
	
	/**
	 * 수강 신청하기
	 * - 성공하면 1, 실패하면 0 리턴
	 */
	public int registrationLectureInsert(RegistrationLectureVO registrationLectureVo) {
		// 학생 정보 : std_id, std_rgst_sem, std_grade
		// 강의 정보 : lect_open_num, lect_univ_dept_num, lect_grdtn_requ_yn
		registrationLectureMapper.registrationLectureInsert(registrationLectureVo);
		
		return 0;
	}
	
	/**
	 * 수강 신청 취소하기
	 */
	
}
