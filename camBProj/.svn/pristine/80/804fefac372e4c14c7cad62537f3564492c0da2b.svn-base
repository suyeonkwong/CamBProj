package kr.or.ddit.admin.member.web;

import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import kr.or.ddit.admin.member.service.MemberService;
import kr.or.ddit.admin.member.vo.MemberVO;


@Controller
@RequestMapping(value = "/admin/member/*")
public class MemberController {
	
	private static Logger logger = LoggerFactory.getLogger(MemberController.class);
	
	@Autowired
	MemberService memberService;
	
	@RequestMapping(value = "/list", method = RequestMethod.GET)
	public String selectMemberList(@RequestParam Map<String, Object> map, Model model) throws Exception{
		
//		멤버 목록
		List<MemberVO> list = this.memberService.selectMemberList(map);
		logger.info("list : "+list);
//		System.out.println("list" + list);
		
		model.addAttribute("list", list);
		return "admin/member/list";
	}
	
	@RequestMapping(value = "/insert", method = RequestMethod.GET)
	public String insertMember(){
		return "admin/member/insert";
	}
	
	@RequestMapping(value = "/insert", method = RequestMethod.POST)
	public String insertMemberPost(@ModelAttribute MemberVO memberVo) throws Exception {
		
		logger.info("memberVo : " + memberVo.toString());
		
		String memId = this.memberService.insertMember(memberVo);
		logger.info("memId : " + memId);
		
		//redirect(GET방식)
		//return "redirect:/admin/member/detail/memId
		return "redirect:/admin/member/detail?memId="+memId;
		
	}
	
	//RequestParam어노테이션의 value : 넘어오는 파라미터의 name값
	//required=false : memId 파라미터가 반드시 있을 필요는 없음(true가 기본. 생략 시 true)
	//defaultValue : 기본값 세팅
	@RequestMapping(value = "/detail", method = RequestMethod.GET)
	public String detailMember(@RequestParam(value="memId", required=false) String memId,
			Model model) throws Exception {
		logger.info("memId : " + memId);
		
//		멤버  상세 정보를 가져옴
		MemberVO memberVo = this.memberService.detailMember(memId);
		
		logger.info("memberVO : " + memberVo.toString());
		
		model.addAttribute("memberVo", memberVo);
		
//		forwarding
		return "admin/member/detail";
	}
	
	
	@RequestMapping(value = "/update", method = RequestMethod.POST)
	public String updateMemberPost(@ModelAttribute MemberVO memberVo) throws Exception {
		logger.info("updateMemberVO : " + memberVo.toString());
		
		int result = this.memberService.updateMember(memberVo);
		logger.info("updateResult : " + result);
		return  "redirect:/admin/member/detail?memId="+memberVo.getMemId();
	}

}
