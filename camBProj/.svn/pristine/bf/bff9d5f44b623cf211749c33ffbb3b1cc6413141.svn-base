package kr.or.ddit.util.auth.controller;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import egovframework.rte.ptl.mvc.tags.ui.pagination.PaginationInfo;
import kr.or.ddit.util.auth.service.AuthService;
import kr.or.ddit.util.auth.vo.AuthLineStepVO;
import kr.or.ddit.util.auth.vo.AuthStepVO;
import kr.or.ddit.util.code.service.CodeService;
import kr.or.ddit.util.code.vo.CodeVO;

@Controller
public class AuthLineController {
	
	@Autowired
	AuthService authService;
	@Autowired
	CodeService codeService; // 공통 코드 처리 용
	
	
	/**
	 * 결재 선 리스트
	 * @param map : pageNum
	 * @return 리스트 목록
	 */
	@RequestMapping(value = "/auth/authLineList")
	public String authLineList(@ModelAttribute AuthLineStepVO authLineStepVo
							 , Model model) {
		
		List<AuthLineStepVO> authLineList = authService.authLineList(authLineStepVo);
		model.addAttribute("authLineList", authLineList);
		
		// 페이징 처리
		PaginationInfo paginationInfo = new PaginationInfo();
		paginationInfo.setCurrentPageNo(authLineStepVo.getPageNo());
		paginationInfo.setRecordCountPerPage(5);
		paginationInfo.setPageSize(5);
		paginationInfo.setTotalRecordCount(authService.authLineTotalCount());
		model.addAttribute("paginationInfo", paginationInfo);
		
		return "auth/authLine/authLineList";
	}
	
	/**
	 * 결재 선 생성
	 * @param model
	 * @return
	 */
	@RequestMapping(value = "/auth/authLineStepInsertView")
	public String authLineInsert(Model model) {
		List<CodeVO> codeList = codeService.codeList("AUT_LIN");
		model.addAttribute("codeList", codeList);
		
		return "auth/authLine/authLineStepInsert";
	}
	
	/**
	 * 결재 스텝 생성 위한 교직원 검색 팝업
	 * @param model
	 * @return
	 */
	@RequestMapping(value = "/auth/authStepSearchPopup")
	public String authStepSearchPopup(@ModelAttribute AuthStepVO authStepVo, Model model) {
		
		List<AuthStepVO> authStep = authService.authStepSearch(authStepVo);
		model.addAttribute("authStep", authStep);
		return "auth/authLine/popup/authStepSearchPopup";
	}
	
	/**
	 * 결재 라인 생성
	 */
	@RequestMapping(value = "/auth/authLineStepInsert")
	public String authLineInsertPost(@ModelAttribute AuthLineStepVO authLineStepVo) {
		System.out.println(">>>>결재 라인 생성 authLineStepVo : " + authLineStepVo);
		authService.authLineStepInsert(authLineStepVo);
		return "redirect:/auth/authLineList";
	}
	
	@RequestMapping(value = "/auth/authLineUpdate", method = RequestMethod.GET)
	public String authLineUpdate() {
		return "auth/authLine/popup/authLineUpdate";
	}

	@RequestMapping(value = "/auth/authLineUpdate", method = RequestMethod.POST)
	public String authLineUpdatePost() {
		return "redirect:/auth/authLineList";
	}

	@RequestMapping(value = "/auth/authLineDelete", method = RequestMethod.POST)
	public String authLineDelete() {
		return "redirect:/auth/authLineList";
	}
	
}
